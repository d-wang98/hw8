{"version":3,"sources":["logo.svg","SearchBar.js","SearchPage.js","Chart.js","utils.js","ChartComponent.js","AnalyzePage.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","state","list","filtered","addItem","bind","removeItem","e","preventDefault","this","newItem","document","getElementById","form","value","push","setState","classList","remove","reset","add","item","slice","some","el","i","splice","style","width","className","filterFunction","items","delete","React","Component","List","handleChange","console","log","target","toUpperCase","margin","padding","type","onChange","border","boxShadow","height","placeholder","map","onClick","SearchPage","userInput","filteredNames","searchList","x","includes","tempList","length","shouldRender","searchListAlpha","Row","SearchBar","ticker","to","Button","updateTicker","CandleStickChart","window","innerHeight","innerWidth","data","ratio","showGrid","estimate","gridHeight","gridWidth","xAccessor","d","date","xExtents","last","yGrid","innerTickSize","tickStrokeOpacity","xGrid","left","right","top","bottom","seriesName","xScale","scaleTime","id","yExtents","high","low","axisAt","orient","ticks","yValue","strokeDasharray","itemType","edgeAt","yAccessor","fill","timeIntervalBarWidth","utcDay","defaultProps","fitWidth","parseDate","timeParse","ChartComponent","fetch","then","response","text","tsvParse","parse","open","close","volume","handleData","Chart","AnalyzePage","handleChangeEstimate","val","estimateValue","companyValue","marketValue","industryValue","handleChangeComp","event","newValue","handleChangeIndustry","handleChangeMarket","dataSet","sum","marks","label","class","Slider","defaultValue","aria-labelledby","step","min","max","valueLabelDisplay","track","onChangeCommitted","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0MAAe,I,mDCITA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,SAAS,IAEX,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAPD,E,2CAUnB,SAAQE,GAENA,EAAEC,iBAGF,IAAIN,EAAOO,KAAKR,MAAMC,KAChBQ,EAAUC,SAASC,eAAe,YAClCC,EAAOF,SAASC,eAAe,eAGhB,IAAjBF,EAAQI,OAEVZ,EAAKa,KAAKL,EAAQI,OAElBL,KAAKO,SAAS,CACZd,KAAMA,IAGRQ,EAAQO,UAAUC,OAAO,aACzBL,EAAKM,SAGLT,EAAQO,UAAUG,IAAI,e,wBAI1B,SAAWC,GAET,IAAMnB,EAAOO,KAAKR,MAAMC,KAAKoB,QAE7BpB,EAAKqB,MAAK,SAACC,EAAIC,GACb,GAAID,IAAOH,EAGT,OADAnB,EAAKwB,OAAOD,EAAG,IACR,KAIXhB,KAAKO,SAAS,CACZd,KAAMA,M,oBAIV,WACE,OACE,qBAAKyB,MAAO,CAACC,MAAO,QAApB,SACE,qBAAKD,MAAO,CAACC,MAAO,QAASC,UAAU,YAAvC,SACE,kCACE,cAAC,EAAD,CAAMC,eAAgBrB,KAAKT,MAAM8B,eAAgBC,MAAOtB,KAAKR,MAAMC,KAAM8B,OAAQvB,KAAKH,uB,GA3D7E2B,IAAMC,WAmErBC,E,kDACJ,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXE,SAAU,IAEZ,EAAKiC,aAAe,EAAKA,aAAa/B,KAAlB,gBALH,E,qDAQnB,WACEI,KAAKO,SAAS,CACZb,SAAUM,KAAKT,MAAM+B,U,0BAIzB,SAAaxB,GACX8B,QAAQC,IAAI,sBAAuB/B,EAAEgC,OAAOzB,OAC5CL,KAAKT,MAAM8B,eAAevB,EAAEgC,OAAOzB,MAAM0B,iB,oBAG3C,WAAU,IAAD,OACP,OACE,sBAAKb,MAAO,CAACC,MAAO,OAAQa,OAAQ,MAAOC,QAAS,OAApD,UACE,uBACEC,KAAK,OACLd,UAAU,mBACVe,SAAUnC,KAAK2B,aACfT,MAAO,CAACkB,OAAO,OAAQC,UAAU,sBAAuBC,OAAO,QAC/DC,YAAY,cAGd,6BACGvC,KAAKR,MAAME,SAAS8C,KAAI,SAAC5B,GAAD,OACvB,+BACGA,EADH,QAEE,sBACEQ,UAAU,SACVqB,QAAS,kBAAM,EAAKlD,MAAMgC,OAAOX,QAJ5BA,e,GAjCFY,IAAMC,WA+CVnC,ICtBAoD,E,kDAjFb,WAAYnD,GAAQ,IAAD,8BACjB,cAAMA,IA6CR8B,eAAiB,SAAAsB,GAOf,IANA,IAAIC,EAAgB,EAAKpD,MAAMqD,WAAWL,KAAI,SAAAM,GAC5C,OAAOA,EAAEC,SAASJ,MAGhBK,EAAW,GAENhC,EAAI,EAAGA,EAAI,EAAKxB,MAAMqD,WAAWI,OAAQjC,IAC5C4B,EAAc5B,IAChBgC,EAAS1C,KAAK,EAAKd,MAAMqD,WAAW7B,IAGxC,EAAKT,SAAS,CAAE2C,aAAcF,KAxD9B,EAAKxD,MAAQ,CACXqD,WAAY,CACV,OACA,OACA,KACA,QACA,OACA,OACA,MACA,KACA,OACA,KACA,QAEFM,gBAAiB,CACf,KAAO,aACP,KAAO,wBACP,GAAK,iBACL,MAAQ,gBACR,KAAO,cACP,KAAO,4BACP,IAAM,uBACN,GAAK,sBACL,KAAO,qBACP,GAAK,8BACL,KAAO,cAGTD,aAAc,CACZ,OACA,OACA,KACA,QACA,OACA,OACA,MACA,KACA,OACA,KACA,SAzCa,E,0CA6DnB,WAAU,IAAD,OAGP,OACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAD,CAAWhC,eAAgBrB,KAAKqB,iBAChC,6BACGrB,KAAKR,MAAM0D,aAAaV,KAAI,SAAAc,GAAM,OACjC,cAAC,IAAD,CAAMC,GAAG,UAAT,SACE,cAACC,EAAA,EAAD,CAAQf,QAAS,kBAAM,EAAKlD,MAAMkE,aAAaH,IAA/C,SACGA,kB,GAxEQ9B,IAAMC,W,wECDzBiC,E,kDACJ,WAAYnE,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,0CAMnB,WAAU,IAAD,OACD8C,EAASqB,OAAOC,YAChBzC,EAAQwC,OAAOE,WAAa,EAClC,EAAkD7D,KAAKT,MAA/C2C,EAAR,EAAQA,KAAM4B,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAiBC,GAArC,EAA2BC,SAA3B,EAAqCD,UAG/BE,EAAa5B,EAFwB,GAAY,GAGjD6B,EAAYhD,EAHK,GAAW,GAK5BiD,EAAY,SAAAC,GAAC,OAAIA,EAAEC,MAEnBC,EAAW,CACfH,EAAUI,eAAKV,IACfM,EAAUN,EAAKA,EAAKb,OAAS,OAGzBwB,EAAQT,EACV,CAAEU,eAAgB,EAAIP,EAAWQ,kBAAmB,IACpD,GACEC,EAAQZ,EACV,CAAEU,eAAgB,EAAIR,EAAYS,kBAAmB,IACrD,GAEJ,OACE,cAAC,IAAD,CACErC,OAAQ,IACRyB,MAAOA,EACP5C,MAAOA,EACPa,OAAQ,CAAE6C,KAAM,GAAIC,MAAO,GAAIC,IAAK,GAAIC,OAAQ,IAChD9C,KAAMA,EACN+C,WAAW,OACXnB,KAAMA,EACNM,UAAWA,EACXc,OAAQC,sBACRZ,SAAUA,EAVZ,SAYE,eAAC,IAAD,CAAOa,GAAI,EAAGC,SAAU,SAAAhB,GAAC,MAAI,CAACA,EAAEiB,KAAMjB,EAAEkB,MAAxC,UAEE,cAAC,QAAD,aAAOC,OAAO,SAASC,OAAO,SAASC,MAAO,GAAOd,IACrD,cAAC,QAAD,aAAOY,OAAO,OAAOC,OAAO,OAAOC,MAAO,GAAOjB,IACjD,cAAC,eAAD,CACEvC,KAAK,aACLyD,OAAQ,kBAAM,EAAKpG,MAAM0E,UACzB2B,gBAAgB,aAElB,cAAC,gBAAD,CACEC,SAAS,QACTJ,OAAO,QACPK,OAAO,QACPC,UAAW,kBAAM,EAAKxG,MAAM0E,UAC5B+B,KAAM,YAGR,cAAC,oBAAD,CAAmB7E,MAAO8E,+BAAqBC,gB,GA5D1B1E,IAAMC,WA0ErCiC,EAAiByC,aAAe,CAC9BjE,KAAM,OAIOwB,MAFfA,EAAmB0C,mBAAS1C,G,kBCxE5B,IAAM2C,EAAYC,YAAU,Y,ICmBbC,E,uKA5Bb,WAAqB,IAAD,ODYDC,MAAM,2EACxBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA3C,GAAI,OAAI8C,YAAS9C,GAlBN+C,EAkBsBR,EAjBjC,SAAShC,GAQf,OAPAA,EAAEC,KAAOuC,EAAMxC,EAAEC,MACjBD,EAAEyC,MAAQzC,EAAEyC,KACZzC,EAAEiB,MAAQjB,EAAEiB,KACZjB,EAAEkB,KAAOlB,EAAEkB,IACXlB,EAAE0C,OAAS1C,EAAE0C,MACb1C,EAAE2C,QAAU3C,EAAE2C,OAEP3C,KATT,IAAmBwC,KCKLJ,MAAK,SAAA3C,GACb,EAAKvD,SAAS,CAAEuD,c,oBAIpB,WAAU,IAAD,OACP,OAAkB,MAAd9D,KAAKR,MACA,8CAEPQ,KAAKT,MAAM0H,WAAWjH,KAAKR,MAAMsE,MAGjC,cAAC,cAAD,UACG,SAAA5B,GAAI,OACH,cAACgF,EAAD,CACEhF,KAAMA,EACN4B,KAAM,EAAKtE,MAAMsE,KACjBG,SAAU,EAAK1E,MAAM0E,SACrBD,SAAU,EAAKzE,MAAMyE,SACrBV,OAAQ,EAAK/D,MAAM+D,iB,GArBF9B,IAAMC,W,SC+IpB0F,E,kDApIb,WAAY5H,GAAQ,IAAD,8BACjB,cAAMA,IAYRkE,aAAe,SAAA3D,GACb,EAAKS,SAAS,CAAE+C,OAAQxD,KAdP,EAiBnBsH,qBAAuB,WACrB,IAAMC,EACJ,EAAK7H,MAAM8H,cACV,EAAK9H,MAAM8H,cAAgB,IACzB,EAAK9H,MAAM+H,aAAe,EACzB,EAAK/H,MAAMgI,YAAc,EACzB,EAAKhI,MAAMiI,cAAgB,GACjC7F,QAAQC,IAAI,YAAcwF,GAC1B,EAAK9G,SAAS,CAAE0D,SAAUoD,KAzBT,EA2BnBK,iBAAmB,SAACC,EAAOC,GACzB,EAAKrH,SAAS,CAAEgH,aAAcK,IAC9B,EAAKR,wBA7BY,EAgCnBS,qBAAuB,SAACF,EAAOC,GAC7B,EAAKrH,SAAS,CAAEkH,cAAeG,IAC/B,EAAKR,wBAlCY,EAqCnBU,mBAAqB,SAACH,EAAOC,GAC3B,EAAKrH,SAAS,CAAEiH,YAAaI,IAC7B,EAAKR,wBAvCY,EA0CnBH,WAAa,SAAA5C,GACX,IAAK,EAAK7E,MAAMuI,QAAS,CACvB,IAAI/G,EACAgH,EAAM,EACV,IAAKhH,EAAIqD,EAAEpB,OAAS,IAAKjC,EAAIqD,EAAEpB,OAAQjC,IACrCgH,GAAY3D,EAAErD,GAAG8F,KAEnB,EAAKvG,SAAS,CACZ0D,SAAU+D,EAAM,IAChBV,cAAeU,EAAM,IACrBD,SAAS,MAlDb,EAAKvI,MAAQ,CACXyE,SAAU,GACVD,UAAU,EACVuD,aAAc,EACdC,YAAa,EACbC,cAAe,EACfH,cAAe,GACfS,SAAS,GATM,E,0CAwDnB,WAEE,IAAME,EAAQ,CACZ,CACE5H,OAAQ,EACR6H,MAAO,WAET,CACE7H,MAAO,EACP6H,MAAO,YAIX,OACE,gCACE,qBAAKC,MAAM,eAAX,SAA2BnI,KAAKT,MAAM+D,SACtC,sBAAK6E,MAAM,aAAX,UACE,sBAAKA,MAAM,cAAX,UACE,qDACoB,+BAAOnI,KAAKT,MAAM+D,SADtC,cAEE,cAAC8E,EAAA,EAAD,CACEC,aAAc,EACdC,kBAAgB,8BAChBC,KAAM,EACNN,MAAOA,EACPO,KAAM,EACNC,IAAK,EACLC,kBAAkB,OAClBC,OAAO,EACPC,kBAAmB5I,KAAK0H,sBAG5B,yDACwB,+BAAO1H,KAAKT,MAAM+D,SAD1C,qBAGE,cAAC8E,EAAA,EAAD,CACEC,aAAc,EACdC,kBAAgB,8BAChBC,KAAM,EACNN,MAAOA,EACPO,KAAM,EACNC,IAAK,EACLC,kBAAkB,OAClBC,OAAO,EACPC,kBAAmB5I,KAAK6H,0BAG5B,gFAEE,cAACO,EAAA,EAAD,CACEC,aAAc,EACdC,kBAAgB,8BAChBC,KAAM,EACNN,MAAOA,EACPO,KAAM,EACNC,IAAK,EACLC,kBAAkB,OAClBC,OAAO,EACPC,kBAAmB5I,KAAK8H,2BAI9B,8BACE,cAAC,EAAD,CACE7D,SAAUjE,KAAKR,MAAMyE,SACrBD,SAAUhE,KAAKR,MAAMwE,SACrBV,OAAQtD,KAAKR,MAAM8D,OACnB2D,WAAYjH,KAAKiH,yB,GA5HLzF,IAAMC,WCwBjBoH,G,yDA1Bb,WAAYtJ,GAAQ,IAAD,8BACjB,cAAMA,IAIRkE,aAAe,SAAA3D,GACb,EAAKS,SAAS,CAAE+C,OAAQxD,KAJxB,EAAKN,MAAQ,CAAE8D,OAAQ,QAFN,E,0CASnB,WAGE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwF,KAAK,IAAZ,SACE,cAAC,EAAD,CAAYrF,aAAczD,KAAKyD,iBAEjC,cAAC,IAAD,CAAOqF,KAAK,WAAZ,SACE,cAAC,EAAD,CAAaxF,OAAQtD,KAAKR,MAAM8D,kB,GAnBxB9B,IAAMC,YCHTsH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvJ,SAASC,eAAe,SAM1B4I,K","file":"static/js/main.f084adc8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"bulma\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      filtered:[]\n    };\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  addItem(e) {\n    // Prevent button click from submitting form\n    e.preventDefault();\n\n    // Create variables for our list, the item to add, and our form\n    let list = this.state.list;\n    const newItem = document.getElementById(\"addInput\");\n    const form = document.getElementById(\"addItemForm\");\n\n    // If our input has a value\n    if (newItem.value != \"\") {\n      // Add the new item to the end of our list array\n      list.push(newItem.value);\n      // Then we use that to set the state for list\n      this.setState({\n        list: list,\n      });\n      // Finally, we need to reset the form\n      newItem.classList.remove(\"is-danger\");\n      form.reset();\n    } else {\n      // If the input doesn't have a value, make the border red since it's required\n      newItem.classList.add(\"is-danger\");\n    }\n  }\n\n  removeItem(item) {\n    // Put our list into an array\n    const list = this.state.list.slice();\n    // Check to see if item passed in matches item in array\n    list.some((el, i) => {\n      if (el === item) {\n        // If item matches, remove it from array\n        list.splice(i, 1);\n        return true;\n      }\n    });\n    // Set state to list\n    this.setState({\n      list: list,\n    });\n  }\n\n  render() {\n    return (\n      <div style={{width: \"100%\"}}>\n        <div style={{width: \"100%\"}} className=\"container\">\n          <section>\n            <List filterFunction={this.props.filterFunction} items={this.state.list} delete={this.removeItem} />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filtered: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      filtered: this.props.items,\n    });\n  }\n\n  handleChange(e) {\n    console.log(\"VALUE OF SEARCH BAR\", e.target.value)\n    this.props.filterFunction(e.target.value.toUpperCase())\n  }\n\n  render() {\n    return (\n      <div style={{width: \"100%\", margin: \"0px\", padding: \"0px\"}}>\n        <input\n          type=\"text\"\n          className=\"input search-bar\"\n          onChange={this.handleChange}\n          style={{border:\"none\", boxShadow:\"0px 3px 5px #c4c4c4\", height:\"30px\"}}\n          placeholder=\"Search...\"\n          \n        />\n        <ul>\n          {this.state.filtered.map((item) => (\n            <li key={item}>\n              {item} &nbsp;\n              <span\n                className=\"delete\"\n                onClick={() => this.props.delete(item)}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\n// import \"../assets/css/App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SearchBar from \"./SearchBar\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchList: [\n        \"AAPL\",\n        \"MSFT\",\n        \"FB\",\n        \"GOOGL\",\n        \"TSLA\",\n        \"BABA\",\n        \"JPM\",\n        \"PG\",\n        \"NVDA\",\n        \"VZ\",\n        \"ADBE\"\n      ],\n      searchListAlpha: {\n        \"AAPL\":\"Apple Inc.\",\n        \"MSFT\":\"Microsoft Corporation\",\n        \"FB\":\"Facebook, Inc.\",\n        \"GOOGL\":\"Alphabet Inc.\",\n        \"TSLA\":\"Tesla, Inc.\",\n        \"BABA\":\"Alibaba Group Holding Ltd\",\n        \"JPM\":\"JPMorgan Chase & Co.\",\n        \"PG\":\"Procter & Gamble Co\",\n        \"NVDA\":\"NVIDIA Corporation\",\n        \"VZ\":\"Verizon Communications Inc.\",\n        \"ADBE\":\"Adobe Inc.\"\n      },\n     \n      shouldRender: [\n        \"AAPL\",\n        \"MSFT\",\n        \"FB\",\n        \"GOOGL\",\n        \"TSLA\",\n        \"BABA\",\n        \"JPM\",\n        \"PG\",\n        \"NVDA\",\n        \"VZ\",\n        \"ADBE\"\n      ]\n    };\n  }\n\n  filterFunction = userInput => {\n    let filteredNames = this.state.searchList.map(x => {\n      return x.includes(userInput);\n    });\n\n    let tempList = [];\n\n    for (var i = 0; i < this.state.searchList.length; i++) {\n      if (filteredNames[i]) {\n        tempList.push(this.state.searchList[i]);\n      }\n    }\n    this.setState({ shouldRender: tempList });\n  };\n\n  render() {\n    //pre-rendering code\n\n    return (\n      <Row>\n        <SearchBar filterFunction={this.filterFunction} />\n        <ul>\n          {this.state.shouldRender.map(ticker => (\n            <Link to=\"analyze\">\n              <Button onClick={() => this.props.updateTicker(ticker)}>\n                {ticker}\n              </Button>\n            </Link>\n          ))}\n        </ul>\n      </Row>\n    );\n  }\n}\n\nexport default SearchPage;\n","// partly from example\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { scaleTime } from \"d3-scale\";\nimport { utcDay } from \"d3-time\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries, StraightLine } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\nimport { EdgeIndicator } from \"react-stockcharts/lib/coordinates\";\nclass CandleStickChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n\n  render() {\n    const height = window.innerHeight;\n    const width = window.innerWidth / 2; // TODO: GOTTA CHANGE\n    const { type, data, ratio, estimate, showGrid } = this.props;\n    const margin = { left: 70, right: 70, top: 20, bottom: 30 };\n\n    const gridHeight = height - margin.top - margin.bottom;\n    const gridWidth = width - margin.left - margin.right;\n\n    const xAccessor = d => d.date;\n\n    const xExtents = [\n      xAccessor(last(data)),\n      xAccessor(data[data.length - 100])\n    ];\n\n    const yGrid = showGrid\n      ? { innerTickSize: -1 * gridWidth, tickStrokeOpacity: 0.1 }\n      : {};\n    const xGrid = showGrid\n      ? { innerTickSize: -1 * gridHeight, tickStrokeOpacity: 0.1 }\n      : {};\n\n    return (\n      <ChartCanvas\n        height={400}\n        ratio={ratio}\n        width={width}\n        margin={{ left: 50, right: 50, top: 10, bottom: 30 }}\n        type={type}\n        seriesName=\"MSFT\"\n        data={data}\n        xAccessor={xAccessor}\n        xScale={scaleTime()}\n        xExtents={xExtents}\n      >\n        <Chart id={1} yExtents={d => [d.high, d.low]}>\n          \n          <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5} {...xGrid} />\n          <YAxis axisAt=\"left\" orient=\"left\" ticks={5} {...yGrid} />\n          <StraightLine\n            type=\"horizontal\"\n            yValue={() => this.props.estimate}\n            strokeDasharray=\"LongDash\"\n          />\n          <EdgeIndicator\n            itemType=\"first\"\n            orient=\"right\"\n            edgeAt=\"right\"\n            yAccessor={() => this.props.estimate}\n            fill={\"#6BA583\"}\n          />\n\n          <CandlestickSeries width={timeIntervalBarWidth(utcDay)} />\n        </Chart>\n      </ChartCanvas>\n    );\n  }\n}\n\nCandleStickChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  ratio: PropTypes.number.isRequired,\n  type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired\n};\n\nCandleStickChart.defaultProps = {\n  type: \"svg\"\n};\nCandleStickChart = fitWidth(CandleStickChart);\n\nexport default CandleStickChart;\n","// from example\n\nimport { tsvParse, csvParse } from  \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\n\nfunction parseData(parse) {\n\treturn function(d) {\n\t\td.date = parse(d.date);\n\t\td.open = +d.open;\n\t\td.high = +d.high;\n\t\td.low = +d.low;\n\t\td.close = +d.close;\n\t\td.volume = +d.volume;\n\n\t\treturn d;\n\t};\n}\n\nconst parseDate = timeParse(\"%Y-%m-%d\");\n\nexport function getData() {\n\tconst promiseMSFT = fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv\")\n\t\t.then(response => response.text())\n\t\t.then(data => tsvParse(data, parseData(parseDate)))\n\treturn promiseMSFT;\n}\n","// from example\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport Chart from \"./Chart\";\nimport { getData } from \"./utils\";\n\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\n\nclass ChartComponent extends React.Component {\n  componentDidMount() {\n    getData().then(data => {\n      this.setState({ data });\n    });\n  }\n\n  render() {\n    if (this.state == null) {\n      return <div>Loading...</div>;\n    } else {\n      this.props.handleData(this.state.data)\n    }\n    return (\n      <TypeChooser>\n        {type => (\n          <Chart\n            type={type}\n            data={this.state.data}\n            estimate={this.props.estimate}\n            showGrid={this.props.showGrid}\n            ticker={this.props.ticker}\n          />\n        )}\n      </TypeChooser>\n    );\n  }\n}\n\nexport default ChartComponent;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport ChartComponent from \"./ChartComponent\";\nimport ReactDOM from \"react-dom\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Container } from \"@material-ui/core\";\n\nclass AnalyzePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      estimate: 56,\n      showGrid: true,\n      companyValue: 0,\n      marketValue: 0,\n      industryValue: 0,\n      estimateValue: 56,\n      dataSet: false\n    };\n  }\n\n  updateTicker = e => {\n    this.setState({ ticker: e });\n  };\n\n  handleChangeEstimate = () => {\n    const val =\n      this.state.estimateValue +\n      (this.state.estimateValue / 50) *\n        (this.state.companyValue / 2 +\n          this.state.marketValue / 8 +\n          this.state.industryValue / 5);\n    console.log(\"HIIII set\" + val);\n    this.setState({ estimate: val });\n  };\n  handleChangeComp = (event, newValue) => {\n    this.setState({ companyValue: newValue });\n    this.handleChangeEstimate();\n  };\n\n  handleChangeIndustry = (event, newValue) => {\n    this.setState({ industryValue: newValue });\n    this.handleChangeEstimate();\n  };\n\n  handleChangeMarket = (event, newValue) => {\n    this.setState({ marketValue: newValue });\n    this.handleChangeEstimate();\n  };\n\n  handleData = d => {\n    if (!this.state.dataSet) {\n      let i;\n      let sum = 0;\n      for (i = d.length - 100; i < d.length; i++) {\n        sum = sum + d[i].open;\n      }\n      this.setState({\n        estimate: sum / 100,\n        estimateValue: sum / 100,\n        dataSet: true\n      });\n    }\n  };\n  render() {\n    //pre-rendering code\n    const marks = [\n      {\n        value: -5,\n        label: \"Bearish\"\n      },\n      {\n        value: 5,\n        label: \"Bullish\"\n      }\n    ];\n\n    return (\n      <div>\n        <div class=\"ticker-title\">{this.props.ticker}</div>\n        <div class=\"graph-page\">\n          <div class=\"slide-bar-a\">\n            <div>\n              1. How Do You See <span>{this.props.ticker}</span> Long Term?\n              <Slider\n                defaultValue={0}\n                aria-labelledby=\"discrete-slider-small-steps\"\n                step={1}\n                marks={marks}\n                min={-5}\n                max={5}\n                valueLabelDisplay=\"auto\"\n                track={false}\n                onChangeCommitted={this.handleChangeComp}\n              />\n            </div>\n            <div>\n              2. How Do You See the <span>{this.props.ticker}</span> Market Long\n              Term?\n              <Slider\n                defaultValue={0}\n                aria-labelledby=\"discrete-slider-small-steps\"\n                step={1}\n                marks={marks}\n                min={-5}\n                max={5}\n                valueLabelDisplay=\"auto\"\n                track={false}\n                onChangeCommitted={this.handleChangeIndustry}\n              />\n            </div>\n            <div>\n              3. How Do You see the Stock Market Long Term?\n              <Slider\n                defaultValue={0}\n                aria-labelledby=\"discrete-slider-small-steps\"\n                step={1}\n                marks={marks}\n                min={-5}\n                max={5}\n                valueLabelDisplay=\"auto\"\n                track={false}\n                onChangeCommitted={this.handleChangeMarket}\n              />\n            </div>\n          </div>\n          <div>\n            <ChartComponent\n              estimate={this.state.estimate}\n              showGrid={this.state.showGrid}\n              ticker={this.state.ticker}\n              handleData={this.handleData}\n            ></ChartComponent>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AnalyzePage;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport SearchPage from \"./SearchPage\";\nimport AnalyzePage from \"./AnalyzePage\";\nimport { AnimatedSwitch } from \"react-router-transition\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ticker: \"MSFT\" };\n  }\n\n  updateTicker = e => {\n    this.setState({ ticker: e });\n  };\n\n  render() {\n    //pre-rendering code\n\n    return (\n      <Router>\n        <Route path=\"/\">\n          <SearchPage updateTicker={this.updateTicker}></SearchPage>\n        </Route>\n        <Route path=\"/analyze\">\n          <AnalyzePage ticker={this.state.ticker}></AnalyzePage>\n        </Route>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}