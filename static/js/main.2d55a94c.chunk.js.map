{"version":3,"sources":["logo.svg","SearchBar.js","SearchPage.js","Chart.js","utils.js","ChartComponent.js","AnalyzePage.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","state","list","filtered","addItem","bind","removeItem","e","preventDefault","this","newItem","document","getElementById","form","value","push","setState","classList","remove","reset","add","item","slice","some","el","i","splice","className","filterFunction","items","delete","React","Component","List","handleChange","console","log","target","toUpperCase","class","type","onChange","placeholder","map","onClick","SearchPage","userInput","filteredNames","searchList","x","includes","tempList","length","shouldRender","Row","SearchBar","ticker","to","Button","updateTicker","CandleStickChart","height","window","innerHeight","width","innerWidth","data","ratio","showGrid","estimate","gridHeight","gridWidth","xAccessor","d","date","xExtents","last","yGrid","innerTickSize","tickStrokeOpacity","xGrid","margin","left","right","top","bottom","seriesName","xScale","scaleTime","id","yExtents","high","low","axisAt","orient","ticks","yValue","strokeDasharray","itemType","edgeAt","yAccessor","fill","timeIntervalBarWidth","utcDay","defaultProps","fitWidth","parseDate","timeParse","ChartComponent","fetch","then","response","text","tsvParse","parse","open","close","volume","handleData","Chart","AnalyzePage","handleChangeEstimate","val","estimateValue","companyValue","marketValue","industryValue","handleChangeComp","event","newValue","handleChangeIndustry","handleChangeMarket","dataSet","sum","marks","label","Slider","defaultValue","aria-labelledby","step","min","max","valueLabelDisplay","track","onChangeCommitted","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2d55a94c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"bulma\";\nimport \"./App.css\";\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      filtered: []\n    };\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  addItem(e) {\n    // Prevent button click from submitting form\n    e.preventDefault();\n\n    // Create variables for our list, the item to add, and our form\n    let list = this.state.list;\n    const newItem = document.getElementById(\"addInput\");\n    const form = document.getElementById(\"addItemForm\");\n\n    // If our input has a value\n    if (newItem.value != \"\") {\n      // Add the new item to the end of our list array\n      list.push(newItem.value);\n      // Then we use that to set the state for list\n      this.setState({\n        list: list\n      });\n      // Finally, we need to reset the form\n      newItem.classList.remove(\"is-danger\");\n      form.reset();\n    } else {\n      // If the input doesn't have a value, make the border red since it's required\n      newItem.classList.add(\"is-danger\");\n    }\n  }\n\n  removeItem(item) {\n    // Put our list into an array\n    const list = this.state.list.slice();\n    // Check to see if item passed in matches item in array\n    list.some((el, i) => {\n      if (el === item) {\n        // If item matches, remove it from array\n        list.splice(i, 1);\n        return true;\n      }\n    });\n    // Set state to list\n    this.setState({\n      list: list\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <section>\n            <List\n              filterFunction={this.props.filterFunction}\n              items={this.state.list}\n              delete={this.removeItem}\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filtered: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      filtered: this.props.items\n    });\n  }\n\n  handleChange(e) {\n    console.log(\"VALUE OF SEARCH BAR\", e.target.value);\n    this.props.filterFunction(e.target.value.toUpperCase());\n  }\n\n  render() {\n    return (\n      <div>\n        <div class=\"name\">\n          <p class=\"name-text\">Stock Evaluator</p>\n        </div>\n        <div class=\"search-bar\">\n          <input\n            type=\"text\"\n            className=\"input search-bar\"\n            onChange={this.handleChange}\n            class=\"input-class\"\n            placeholder=\"Search...\"\n          />\n          <div className=\"unorderedList\">\n            <ul>\n              {this.state.filtered.map(item => (\n                <li key={item}>\n                  {item} &nbsp;\n                  <span\n                    className=\"delete\"\n                    onClick={() => this.props.delete(item)}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\n// import \"../assets/css/App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SearchBar from \"./SearchBar\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nclass SearchPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchList: [\n        \"AAPL\",\n        \"MSFT\",\n        \"FB\",\n        \"GOOGL\",\n        \"TSLA\",\n        \"BABA\",\n        \"JPM\",\n        \"PG\",\n        \"NVDA\",\n        \"VZ\",\n        \"ADBE\",\n        \"CREE\",\n        \"AMD\",\n        \"NIO\",\n        \"HPQ\",\n        \"DELL\"\n      ],\n      // searchListAlpha: {\n      //   \"AAPL\":\"Apple Inc.\",\n      //   \"MSFT\":\"Microsoft Corporation\",\n      //   \"FB\":\"Facebook, Inc.\",\n      //   \"GOOGL\":\"Alphabet Inc.\",\n      //   \"TSLA\":\"Tesla, Inc.\",\n      //   \"BABA\":\"Alibaba Group Holding Ltd\",\n      //   \"JPM\":\"JPMorgan Chase & Co.\",\n      //   \"PG\":\"Procter & Gamble Co\",\n      //   \"NVDA\":\"NVIDIA Corporation\",\n      //   \"VZ\":\"Verizon Communications Inc.\",\n      //   \"ADBE\":\"Adobe Inc.\"\n      // },\n     \n      shouldRender: [\n        \"AAPL\",\n        \"MSFT\",\n        \"FB\",\n        \"GOOGL\",\n        \"TSLA\",\n        \"BABA\",\n        \"JPM\",\n        \"PG\",\n        \"NVDA\",\n        \"VZ\",\n        \"ADBE\",\n        \"CREE\",\n        \"AMD\",\n        \"NIO\",\n        \"HPQ\",\n        \"DELL\"\n      ]\n    };\n  }\n\n  filterFunction = userInput => {\n    let filteredNames = this.state.searchList.map(x => {\n      return x.includes(userInput);\n    });\n\n    let tempList = [];\n\n    for (var i = 0; i < this.state.searchList.length; i++) {\n      if (filteredNames[i]) {\n        tempList.push(this.state.searchList[i]);\n      }\n    }\n    this.setState({ shouldRender: tempList });\n  };\n\n  render() {\n    //pre-rendering code\n\n    return (\n      <Row>\n        <SearchBar filterFunction={this.filterFunction} />\n        <ul>\n          {this.state.shouldRender.map(ticker => (\n            <Link to=\"analyze\">\n              <Button onClick={() => this.props.updateTicker(ticker)}>\n                {ticker}\n              </Button>\n            </Link>\n          ))}\n        </ul>\n      </Row>\n    );\n  }\n}\n\nexport default SearchPage;\n","// partly from example\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { scaleTime } from \"d3-scale\";\nimport { utcDay } from \"d3-time\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries, StraightLine } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\nimport { EdgeIndicator } from \"react-stockcharts/lib/coordinates\";\nclass CandleStickChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n\n  render() {\n    const height = window.innerHeight;\n    const width = window.innerWidth / 2; // TODO: GOTTA CHANGE\n    const { type, data, ratio, estimate, showGrid } = this.props;\n    const margin = { left: 70, right: 70, top: 20, bottom: 30 };\n\n    const gridHeight = height - margin.top - margin.bottom;\n    const gridWidth = width - margin.left - margin.right;\n\n    const xAccessor = d => d.date;\n\n    const xExtents = [\n      xAccessor(last(data)),\n      xAccessor(data[data.length - 100])\n    ];\n\n    const yGrid = showGrid\n      ? { innerTickSize: -1 * gridWidth, tickStrokeOpacity: 0.1 }\n      : {};\n    const xGrid = showGrid\n      ? { innerTickSize: -1 * gridHeight, tickStrokeOpacity: 0.1 }\n      : {};\n\n    return (\n      <ChartCanvas\n        height={400}\n        ratio={ratio}\n        width={width}\n        margin={{ left: 50, right: 50, top: 10, bottom: 30 }}\n        type={type}\n        seriesName=\"MSFT\"\n        data={data}\n        xAccessor={xAccessor}\n        xScale={scaleTime()}\n        xExtents={xExtents}\n      >\n        <Chart id={1} yExtents={d => [d.high, d.low]}>\n          \n          <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={5} {...xGrid} />\n          <YAxis axisAt=\"left\" orient=\"left\" ticks={5} {...yGrid} />\n          <StraightLine\n            type=\"horizontal\"\n            yValue={() => this.props.estimate}\n            strokeDasharray=\"LongDash\"\n          />\n          <EdgeIndicator\n            itemType=\"first\"\n            orient=\"right\"\n            edgeAt=\"right\"\n            yAccessor={() => this.props.estimate}\n            fill={\"#6BA583\"}\n          />\n\n          <CandlestickSeries width={timeIntervalBarWidth(utcDay)} />\n        </Chart>\n      </ChartCanvas>\n    );\n  }\n}\n\nCandleStickChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  ratio: PropTypes.number.isRequired,\n  type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired\n};\n\nCandleStickChart.defaultProps = {\n  type: \"svg\"\n};\nCandleStickChart = fitWidth(CandleStickChart);\n\nexport default CandleStickChart;\n","// from example\n\nimport { tsvParse, csvParse } from  \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\n\nfunction parseData(parse) {\n\treturn function(d) {\n\t\td.date = parse(d.date);\n\t\td.open = +d.open;\n\t\td.high = +d.high;\n\t\td.low = +d.low;\n\t\td.close = +d.close;\n\t\td.volume = +d.volume;\n\n\t\treturn d;\n\t};\n}\n\nconst parseDate = timeParse(\"%Y-%m-%d\");\n\nexport function getData() {\n\tconst promiseMSFT = fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv\")\n\t\t.then(response => response.text())\n\t\t.then(data => tsvParse(data, parseData(parseDate)))\n\treturn promiseMSFT;\n}\n","// from example\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport Chart from \"./Chart\";\nimport { getData } from \"./utils\";\n\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\n\nclass ChartComponent extends React.Component {\n  componentDidMount() {\n    getData().then(data => {\n      this.setState({ data });\n    });\n  }\n\n  render() {\n    if (this.state == null) {\n      return <div>Loading...</div>;\n    } else {\n      this.props.handleData(this.state.data);\n    }\n    return (\n      <TypeChooser>\n        {type => (\n          <Chart\n            type={type}\n            data={this.state.data}\n            estimate={this.props.estimate}\n            showGrid={this.props.showGrid}\n            ticker={this.props.ticker}\n          />\n        )}\n      </TypeChooser>\n    );\n  }\n}\n\nexport default ChartComponent;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport ChartComponent from \"./ChartComponent\";\nimport ReactDOM from \"react-dom\";\nimport Slider from \"@material-ui/core/Slider\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Container } from \"@material-ui/core\";\n\nclass AnalyzePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      estimate: 56,\n      showGrid: true,\n      companyValue: 0,\n      marketValue: 0,\n      industryValue: 0,\n      estimateValue: 56,\n      dataSet: false\n    };\n  }\n\n  updateTicker = e => {\n    this.setState({ ticker: e });\n  };\n\n  handleChangeEstimate = () => {\n    const val =\n      this.state.estimateValue +\n      (this.state.estimateValue / 50) *\n        (this.state.companyValue / 2 +\n          this.state.marketValue / 8 +\n          this.state.industryValue / 5);\n    console.log(\"HIIII set\" + val);\n    this.setState({ estimate: val });\n  };\n  handleChangeComp = (event, newValue) => {\n    this.setState({ companyValue: newValue });\n    this.handleChangeEstimate();\n  };\n\n  handleChangeIndustry = (event, newValue) => {\n    this.setState({ industryValue: newValue });\n    this.handleChangeEstimate();\n  };\n\n  handleChangeMarket = (event, newValue) => {\n    this.setState({ marketValue: newValue });\n    this.handleChangeEstimate();\n  };\n\n  handleData = d => {\n    if (!this.state.dataSet) {\n      let i;\n      let sum = 0;\n      for (i = d.length - 100; i < d.length; i++) {\n        sum = sum + d[i].open;\n      }\n      this.setState({\n        estimate: sum / 100,\n        estimateValue: sum / 100,\n        dataSet: true\n      });\n    }\n  };\n  render() {\n    //pre-rendering code\n    const marks = [\n      {\n        value: -5,\n        label: \"Bearish\"\n      },\n      {\n        value: 5,\n        label: \"Bullish\"\n      }\n    ];\n\n    return (\n      <div>\n        <div>\n          <p class=\"ticker-title\">{this.props.ticker}</p>\n        </div>\n        <div class=\"graph-page\">\n          <div class=\"slide-bar-a\">\n            <div>\n              1. How Do You See <span>{this.props.ticker}</span> Long Term?\n              <Slider\n                defaultValue={0}\n                aria-labelledby=\"discrete-slider-small-steps\"\n                step={1}\n                marks={marks}\n                min={-5}\n                max={5}\n                valueLabelDisplay=\"auto\"\n                track={false}\n                onChangeCommitted={this.handleChangeComp}\n              />\n            </div>\n            <div>\n              2. How Do You See the <span>{this.props.ticker}</span> Market Long\n              Term?\n              <Slider\n                defaultValue={0}\n                aria-labelledby=\"discrete-slider-small-steps\"\n                step={1}\n                marks={marks}\n                min={-5}\n                max={5}\n                valueLabelDisplay=\"auto\"\n                track={false}\n                onChangeCommitted={this.handleChangeIndustry}\n              />\n            </div>\n            <div>\n              3. How Do You see the Stock Market Long Term?\n              <Slider\n                defaultValue={0}\n                aria-labelledby=\"discrete-slider-small-steps\"\n                step={1}\n                marks={marks}\n                min={-5}\n                max={5}\n                valueLabelDisplay=\"auto\"\n                track={false}\n                onChangeCommitted={this.handleChangeMarket}\n              />\n            </div>\n          </div>\n          <div>\n            <ChartComponent\n              estimate={this.state.estimate}\n              showGrid={this.state.showGrid}\n              ticker={this.state.ticker}\n              handleData={this.handleData}\n            ></ChartComponent>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AnalyzePage;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport SearchPage from \"./SearchPage\";\nimport AnalyzePage from \"./AnalyzePage\";\nimport { AnimatedSwitch } from \"react-router-transition\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ticker: \"MSFT\" };\n  }\n\n  updateTicker = e => {\n    this.setState({ ticker: e });\n  };\n\n  render() {\n    //pre-rendering code\n\n    return (\n      <Router>\n        <Route path=\"/\">\n          <SearchPage updateTicker={this.updateTicker}></SearchPage>\n        </Route>\n        <Route path=\"/analyze\">\n          <AnalyzePage ticker={this.state.ticker}></AnalyzePage>\n        </Route>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}